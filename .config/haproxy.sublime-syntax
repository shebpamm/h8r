%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Haproxy
file_extensions:
  - haproxy.cfg
scope: source.haproxy
contexts:
  main:
    - match: \#.*
      scope: comment
    - match: '\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?):\d{1,5}\b'
      scope: constant.numeric
    - match: '\b\*:\d{1,5}\b'
      scope: constant.numeric
    - match: '\bciphers\s+[^\b]+\b'
      scope: string.other
    - match: \b(\d+|(\d+)s)\b
      scope: constant.numeric
    - match: \b(key|server_id|gpc0|gpc0_rate|gpc1|gpc1_rate|conn_cnt|conn_cur|conn_rate|sess_cnt|sess_rate|http_req_cnt|http_req_rate|http_err_cnt|http_err_rate|bytes_in_cnt|bytes_in_rate|bytes_out_cnt|bytes_out_rate)\b
      scope: constant.language
    - match: \b^(aggregations|backend|defaults|frontend|global|listen|peers|resolvers|userlist)\b
      scope: support.class
    - match: \b(accepted_payload_size|acl|appsession|backlog|balance|bind|bind-process|block|ca-base|chroot|compression|cookie|cpu-map|crt-base|daemon|default-server|default_backend|description|disabled|dispatch|enabled|errorfile|errorloc|errorloc302|errorloc303|force-persist|from|fullconn|grace|hash-type|hold|id|ignore-persist|lua-load|log-format|log|mode|monitor\s+fail|monitor-net|monitor-uri|nameserver|nbproc|peer|persist\s+rdp-cookie|rate-limit\s+sessions|redirect|reqadd|reqallow|reqdel|reqdeny|reqiallow|reqidel|reqideny|reqipass|reqirep|reqisetbe|reqitarpit|reqpass|reqrep|reqsetbe|reqtarpit|resolution_pool_size|resolve_retries|retries|rspadd|rspdel|rspdeny|rspidel|rspideny|rspirep|rsprep|server|source|ssl-default-bind-(ciphers|options)|timeout|to|unique-id-(format|header)|use(_backend|-server))\b
      scope: keyword
    - match: ^\s*\b(maxconn)\b|^\s*\b(user)\b|^\s*\b(group)\b
      scope: keyword
    - match: \b(capture\s+(cookie|request\s+header|response\s+header))\b
      scope: keyword
    - match: \b(status|rstatus|rstring|string)\s+.+
      scope: string.quoted.double
    - match: \b(http-check\s+(disable-on-404|expect|send-state)|http-(request|response))\b
      scope: keyword
    - match: \b(option\s+(abortonclose|accept-invalid-http-request|accept-invalid-http-response|allbackups|checkcache|clitcpka|contstats|dontlog-normal|dontlognull|forceclose|forwardfor|http-no-delay|http-pretend-keepalive|http-server-close|http-use-proxy-header|httpchk|httpclose|httplog|http_proxy|independent-streams|ldap-check|log-health-checks|log-separate-errors|logasap|mysql-check|pgsql-check|nolinger|originalto|persist|redispatch|redis-check|smtpchk|socket-stats|splice-auto|splice-request|splice-response|srvtcpka|ssl-hello-chk|tcp-check|tcp-smart-accept|tcp-smart-connect|tcpka|tcplog|transparent))\b
      scope: keyword
    - match: \b(stats\s+(admin|auth|bind-process|enable|hide-version|http-request|realm|refresh|scope|show-desc|show-legends|show-node|socket|timeout|uri))\b
      scope: keyword
    - match: \b(stick\s+(match|on|store-request|store-response)|stick-table)\b
      scope: keyword
    - match: \b(tcp-request\s+(connection|content|inspect-delay)|tcp-response\s+(content|inspect-delay))\b
      scope: keyword
    - match: \b(timeout\s+(check|client|connect|http-keep-alive|http-request|queue|server|tarpit|tunnel))\b
      scope: keyword
    - match: \b(\Ë‡\w+\d+)\"\b
      scope: string.unqouted
    - match: \".*\"
      scope: string.quoted
    - match: \b(add-header|admin|append-slash|backup|ca-file|check|code|connect|crt|debug|del-header|drop-query|error-limit|found|group|http|https|insecure-password|len|level|maxconn|mark-down|notice|no-sslv3|nx|obsolete|on-error|on-marked-up|optional|origin|other|path_beg|port|prefix|refused|resolve|retry|rise|roundrobin|scheme|set-header|shutdown-backup-sessions|ssl|status|tcp|timeout|tune|use-service|user|valid|verify)\b
      scope: support.variable
    - match: \b(add-(header|acl|map|var)|del-(acl|header|map|var)|set-(header|nice|log-level|path|query|uri|tos|mark|priority-classs|priority-offset|var)\replace-(header|value))\b
      scope: support.variable
    - match: \s+(or|\|\||!)\s+
      scope: keyword.operator
    - match: \b(if|unless|rewrite)\b
      scope: keyword.control
    - match: '%\[[^\]]+\]'
      scope: variable.parameter
    - match: \b(capture\.(req|res)\.hdr|http_auth)\b
      scope: entity.name.function
    - match: '/[-+\w/\\|^.:;@%!$*?=~(){}\[\]`"''#<>&]*'
      scope: variable.parameter
